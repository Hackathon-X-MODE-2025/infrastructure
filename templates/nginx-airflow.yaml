apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
    external-dns.alpha.kubernetes.io/hostname: {{ .Values.nginx.airflowHost }}
    external-dns.alpha.kubernetes.io/ttl: "120"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET"
    nginx.ingress.kubernetes.io/cors-allow-origin: "{{ .Values.nginx.corsAllowOrigin }}"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    #nginx.ingress.kubernetes.io/rewrite-target: /$1
  name: airflow-gateway
spec:
  ingressClassName: nginx
  rules:
    - host: {{ .Values.nginx.airflowHost }}
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: airflow-web
                port:
                  number: 443
  tls:
  - hosts:
    - {{ .Values.nginx.airflowHost }}
    secretName: tls-secret 
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     nginx.ingress.kubernetes.io/enable-cors: "true"
#     nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, PATCH, DELETE"
#     nginx.ingress.kubernetes.io/cors-allow-origin: "{{ .Values.nginx.corsAllowOrigin }}"
#     nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
#     nginx.ingress.kubernetes.io/rewrite-target: /$1
#   name: airflow-gateway
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: {{ .Values.nginx.host }}
#       http:
#         paths:
#           - path: /airflow/(.*)
#             pathType: ImplementationSpecific
#             backend:
#               service:
#                 name: airflow-web
#                 port:
#                   number: 8080